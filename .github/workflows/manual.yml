on:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: "*/15 * * * *"

name: Grading-Script

jobs:
  Grading-Script:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - name: Install dependencies
        run: |
          install.packages(c("devtools", "jsonlite", "gh"))
          devtools::install_github("jdtrat/simplegit")
        shell: Rscript {0}
      - name: Ping Mason
        run: |
            path <- "jdtrat/ds4psych_actions"
            # If Mason is not a collaborator, send her an invite and tag her in an issue
            if (!simplegit::gh_collab_check(path, "smasongarrison", messages = FALSE)) {
              simplegit::gh_collab_invite(path, "smasongarrison")
              simplegit::gh_issue_new(path, title = "Please grade me!", body = "@smasongarrison, I've finished my lab. Please grade me!")
            } else {
              # if Mason is a collaborator, check to see whether there are any issues that mention her.
              # If so, assign her to all of them and remind her! If not, she must have closed them (:
              if (simplegit::gh_issue_mention(path, collaborator = "smasongarrison")) {
                # Assign Mason to those -- nothing happens if we reassign
                which_issues <- as.numeric(simplegit::gh_issue_list(path, mentioned = "smasongarrison")$number)
                lapply(which_issues, simplegit::gh_issue_assign, path = path, assignees = "smasongarrison")
                # Add a comment pinging Mason to remind her!
                lapply(which_issues, simplegit::gh_issue_comment, path = path,
                       body = "@smasongarrison, this is a reminder to please grade me. I will reappear every 48 hours until you close this issue.")
              }
            }
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        shell: Rscript {0}
